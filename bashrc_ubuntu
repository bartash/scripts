. /etc/lsb-release
export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
if [[ $DISTRIB_RELEASE = 14.04 ]]; then
    export JAVA_HOME=/usr/lib/jvm/java-1.7.0-openjdk-amd64
fi


export BOOST_LIBRARYDIR=/usr/lib/x86_64-linux-gnu
export LC_ALL="en_US.UTF-8"

# on ubuntu, go is in /usr/local
export GOROOT=/usr/local/go

a impala1='export IMPALA_HOME=$HOME/git/asf/Impala; export MYPROMPT=impala1 ; . ~/scripts/my_impala.sh; cd $IMPALA_HOME'
a impala2='export IMPALA_HOME=$HOME/git/asf/Impala2; export MYPROMPT=impala2 ; . ~/scripts/my_impala.sh; cd $IMPALA_HOME'
a impala3='export IMPALA_HOME=$HOME/git/asf/Impala3; export MYPROMPT=impala3 ; . ~/scripts/my_impala.sh; cd $IMPALA_HOME'
a impala_cdh1='export IMPALA_HOME=$HOME/git/cdh/Impala; export MYPROMPT=cdh_impala1 ; . ~/scripts/my_impala.sh; cd $IMPALA_HOME'
a cdh_impala1=impala_cdh1
a impala_cdh2='export IMPALA_HOME=$HOME/git/cdh/Impala2; export MYPROMPT=cdh_impala2 ; . ~/scripts/my_impala.sh; cd $IMPALA_HOME'
a cdh_impala2=impala_cdh2

# https://cwiki.apache.org/confluence/display/IMPALA/Using+Gerrit+to+submit+and+review+patches
# says
# set your "GERRIT_USER" environment variable to your Gerrit username
export GERRIT_USER=bartash

# dita
export PATH=$PATH:$HOME/bin/dita-ot-3.1.1/bin

# the default vnc client, already installed
alias vnc=remmina

# set this by default so the native toolchain build will not fail at the end
export PUBLISH_DEPENDENCIES=0

export SUBL=/usr/bin/subl

alias stingo='export GOPATH=$HOME/git/bartash/stingo; . ~/scripts/gosetup.sh; cd $GOPATH'
# for dwx GOPATH does not matter
# alias dwx1='export AADWX=dwx1; export GOPATH=$HOME/git/go; . ~/scripts/my_dwx.sh; cd "$DWX_HOME"'
alias dwx-dev1='export AADWX=dwx-dev1; export GOPATH=$HOME/git/go; . ~/scripts/dwx_postgres.sh ; . ~/scripts/my_dwx.sh; cd "$DWX_HOME"'
# alias dwx4='export AADWX=dwx4; export GOPATH=$HOME/git/go4; . ~/scripts/my_dwx.sh; cd "$DWX_HOME"'
alias dwx-dev4='export AADWX=dwx-dev4; export GOPATH=$HOME/git/go4; . ~/scripts/dwx_postgres.sh ; . ~/scripts/my_dwx.sh; cd "$DWX_HOME"'
alias dwx-dev5='export AADWX=dwx-dev5; export GOPATH=$HOME/git/go5; . ~/scripts/dwx_postgres.sh ; . ~/scripts/my_dwx.sh; cd "$DWX_HOME"'
alias dwx-dev6='export AADWX=dwx-dev6; export GOPATH=$HOME/git/go6; . ~/scripts/dwx_postgres.sh ; . ~/scripts/my_dwx.sh; cd "$DWX_HOME"'

alias k=kubectl
alias impala-shell=impala-shell.sh

if  [ -x "$(command -v kubectl)" ]; then
  source <(kubectl completion bash | sed s/kubectl/k/g)
  source <(kubectl completion bash)
fi

PS1='[\w][$MYPROMPT]\$ ' 


# go get github.com/segmentio/aws-okta
# rm  ~/go/bin/aws-okta
# export GO111MODULE=on
# go get github.com/segmentio/aws-okta@v0.21.0
export PATH=$PATH:$HOME/go/bin
export AWS_OKTA_BACKEND=secret-service
# https://cloudera.atlassian.net/wiki/spaces/ESRE/pages/30376051/SRE+Runbook+-+Cloud+Users+AWS-Okta+SSO
# . ~/git/sre/sre/terraform/modules/cloud-users/ao_config/AO_CONFIG.sh
# . ~/git/sre/sre/terraform/modules/cloud-users/ao_config/.bashrc_aws-okta

alias aws-okta='aws-okta.exe --mfa-duo-device token'
alias ao='aws-okta.exe --mfa-duo-device token'

# for dwx personal docker builds
export USER_TAG=asherman


export IMPALA_CONCURRENT_DOWNLOADS=1
